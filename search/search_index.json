{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Django module that supplies models, tasks, and fuctions for EVE Online. Primarily for use in the Krypted Platform . Project layout \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 admin.py # Admin views for Django \u251c\u2500\u2500 apps.py \u251c\u2500\u2500 decorators.py # View and function decorators \u251c\u2500\u2500 exceptions.py # Custom exceptions \u251c\u2500\u2500 models.py # Data models \u251c\u2500\u2500 tasks.py # Celery tasks \u251c\u2500\u2500 templates # Templates (built with AdminLTE 2.0 in mind) \u251c\u2500\u2500 tests # Test cases \u251c\u2500\u2500 urls.py # URLs \u251c\u2500\u2500 utilities # EVE Online static and ESI utilities \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 esi # ESI helpers \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2514\u2500\u2500 universe.py \u2502 \u2514\u2500\u2500 static # EVE Static Database helpers \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 universe.py \u2514\u2500\u2500 views # Django views \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 api.py \u251c\u2500\u2500 character.py \u251c\u2500\u2500 corporation.py \u2514\u2500\u2500 sso.py","title":"Overview"},{"location":"#overview","text":"Django module that supplies models, tasks, and fuctions for EVE Online. Primarily for use in the Krypted Platform .","title":"Overview"},{"location":"#project-layout","text":"\u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 admin.py # Admin views for Django \u251c\u2500\u2500 apps.py \u251c\u2500\u2500 decorators.py # View and function decorators \u251c\u2500\u2500 exceptions.py # Custom exceptions \u251c\u2500\u2500 models.py # Data models \u251c\u2500\u2500 tasks.py # Celery tasks \u251c\u2500\u2500 templates # Templates (built with AdminLTE 2.0 in mind) \u251c\u2500\u2500 tests # Test cases \u251c\u2500\u2500 urls.py # URLs \u251c\u2500\u2500 utilities # EVE Online static and ESI utilities \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 esi # ESI helpers \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2514\u2500\u2500 universe.py \u2502 \u2514\u2500\u2500 static # EVE Static Database helpers \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 universe.py \u2514\u2500\u2500 views # Django views \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 api.py \u251c\u2500\u2500 character.py \u251c\u2500\u2500 corporation.py \u2514\u2500\u2500 sso.py","title":"Project layout"},{"location":"features/","text":"Features Group Rules Add users to groups based on characters, corporations, alliances, and even corporation roles. Not amazingly useful by itself, but when paired with django-discord-connector , you'll have a fully automated authentication! Character Tracking Track character data for members within your organization. Useful for audits, insights, and administration. Corporation Tracking Track corporation rosters, structures, and more. Useful for roster management and alliance administration. Third Party Extensions Extend the EVE Connector with other useful packages, like doctrine and fitting audits.","title":"Features"},{"location":"features/#features","text":"","title":"Features"},{"location":"features/#group-rules","text":"Add users to groups based on characters, corporations, alliances, and even corporation roles. Not amazingly useful by itself, but when paired with django-discord-connector , you'll have a fully automated authentication!","title":"Group Rules"},{"location":"features/#character-tracking","text":"Track character data for members within your organization. Useful for audits, insights, and administration.","title":"Character Tracking"},{"location":"features/#corporation-tracking","text":"Track corporation rosters, structures, and more. Useful for roster management and alliance administration.","title":"Corporation Tracking"},{"location":"features/#third-party-extensions","text":"Extend the EVE Connector with other useful packages, like doctrine and fitting audits.","title":"Third Party Extensions"},{"location":"user_guide/","text":"User Guide Installation Install django-eveonline_connector pip install django_eveonline_connector Note Krypted Platform users, specify django_eveonline_connector in PIP_INSTALLS . Add django_eveonline_connector to your INSTALLED_APPS Static Database Important Krypted Platform users, skip this section. The static database is included in your base image. The static database is highly recommended, without this many services will be hamstringed by ESI. We recommend the SQLLite database from FuzzWorks. Install BZIP for static export file apt-get install bzip Get the export wget https://www.fuzzwork.co.uk/dump/sqlite-latest.sqlite.bz2 Decompress bunzip2 sqlite-latest.sqlite.bz2 Rename (optional) mv sqlite-latest.sqlite eve_static.sqlite Add the database to the settings file (eve_static is what the code looks for) DATABASES = { 'eve_static': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'eve_static_export.sqlite'), } } Configuration Important Krypted Platform users, you will be using Admin Panel settings to configure your package. Navigate to Admin Panel from your homepage sidebar, edit settings under the Django EVE Connector section. There are two ways to configure django_eveonline_connector : Environment Variables Admin Panel Settings Variable Description Example ESI_BASE_URL ESI Swagger Version https://esi.evetech.net/latest/swagger.json?datasource=tranquility ESI_CLIENT_ID Client ID from Developer Application 1239812934871239 ESI_SECRET_KEY Secret Key from Developer Application aiosdfjasodjifajoi234aisdfa ESI_CALLBACK_URL Callback URL from Developer Application http:// MY.DOMAIN /eveonline/sso/callback To create a developer application, navigate here . Log in and create a new application Select Authentication & API Access and select all scopes Insert your callback URL (e.g http:// MY.DOMAIN /eveonline/sso/callback) Save the application Use the fields from the application to fill out the settings from above. Permissions Your user groups will need permissions to interact with certain parts of the application. General Permissions Permission Class Action Result eve scope CRUD User with staff status can modify scope settings eve character View User can view EVE characters eve character Change User can refresh EVE character data eve character Delete User with staff status can delete EVE Characters eve corporation View User can view tracked corporations eve alliance View User can view tracked alliances eve asset View User can view character assets (requires eve character view) eve jump clone View User can view character clones eve contact View User can view eve character contacts eve contract View User can view eve character contracts eve skill View User can view eve character skills eve journal entry View User can view eve character journal entries eve transaction View User can view eve character transactions eve structure View User can view eve corporation structures (only their corporation) Special Permissions Permission Class Additional Permission eve structure Corporation bypass (can view all structures) General Usage Tracking Corporations By default, we do not automatically keep all entity data up to date. To track a corporation and its related data (structures, etc), be sure to toggle track_corporation on the corporation in the Admin Panel. To constantly keep the character data (skills, contracts, etc) up to date for members of a corporation, enable track_characters . Optional Tasks Danger Only applies to Krypted users. There are additional tasks that you can enable, such as structure tracking. Make sure you visit Setup in the Krypted Platform sidebar. Group Rules Group rules are rules that apply a Django group based on characters, corporations, and more. You can add these in the Admin Panel .","title":"User Guide"},{"location":"user_guide/#user-guide","text":"","title":"User Guide"},{"location":"user_guide/#installation","text":"Install django-eveonline_connector pip install django_eveonline_connector Note Krypted Platform users, specify django_eveonline_connector in PIP_INSTALLS . Add django_eveonline_connector to your INSTALLED_APPS","title":"Installation"},{"location":"user_guide/#static-database","text":"Important Krypted Platform users, skip this section. The static database is included in your base image. The static database is highly recommended, without this many services will be hamstringed by ESI. We recommend the SQLLite database from FuzzWorks. Install BZIP for static export file apt-get install bzip Get the export wget https://www.fuzzwork.co.uk/dump/sqlite-latest.sqlite.bz2 Decompress bunzip2 sqlite-latest.sqlite.bz2 Rename (optional) mv sqlite-latest.sqlite eve_static.sqlite Add the database to the settings file (eve_static is what the code looks for) DATABASES = { 'eve_static': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'eve_static_export.sqlite'), } }","title":"Static Database"},{"location":"user_guide/#configuration","text":"Important Krypted Platform users, you will be using Admin Panel settings to configure your package. Navigate to Admin Panel from your homepage sidebar, edit settings under the Django EVE Connector section. There are two ways to configure django_eveonline_connector : Environment Variables Admin Panel Settings Variable Description Example ESI_BASE_URL ESI Swagger Version https://esi.evetech.net/latest/swagger.json?datasource=tranquility ESI_CLIENT_ID Client ID from Developer Application 1239812934871239 ESI_SECRET_KEY Secret Key from Developer Application aiosdfjasodjifajoi234aisdfa ESI_CALLBACK_URL Callback URL from Developer Application http:// MY.DOMAIN /eveonline/sso/callback To create a developer application, navigate here . Log in and create a new application Select Authentication & API Access and select all scopes Insert your callback URL (e.g http:// MY.DOMAIN /eveonline/sso/callback) Save the application Use the fields from the application to fill out the settings from above.","title":"Configuration"},{"location":"user_guide/#permissions","text":"Your user groups will need permissions to interact with certain parts of the application.","title":"Permissions"},{"location":"user_guide/#general-permissions","text":"Permission Class Action Result eve scope CRUD User with staff status can modify scope settings eve character View User can view EVE characters eve character Change User can refresh EVE character data eve character Delete User with staff status can delete EVE Characters eve corporation View User can view tracked corporations eve alliance View User can view tracked alliances eve asset View User can view character assets (requires eve character view) eve jump clone View User can view character clones eve contact View User can view eve character contacts eve contract View User can view eve character contracts eve skill View User can view eve character skills eve journal entry View User can view eve character journal entries eve transaction View User can view eve character transactions eve structure View User can view eve corporation structures (only their corporation)","title":"General Permissions"},{"location":"user_guide/#special-permissions","text":"Permission Class Additional Permission eve structure Corporation bypass (can view all structures)","title":"Special Permissions"},{"location":"user_guide/#general-usage","text":"","title":"General Usage"},{"location":"user_guide/#tracking-corporations","text":"By default, we do not automatically keep all entity data up to date. To track a corporation and its related data (structures, etc), be sure to toggle track_corporation on the corporation in the Admin Panel. To constantly keep the character data (skills, contracts, etc) up to date for members of a corporation, enable track_characters .","title":"Tracking Corporations"},{"location":"user_guide/#optional-tasks","text":"Danger Only applies to Krypted users. There are additional tasks that you can enable, such as structure tracking. Make sure you visit Setup in the Krypted Platform sidebar.","title":"Optional Tasks"},{"location":"user_guide/#group-rules","text":"Group rules are rules that apply a Django group based on characters, corporations, and more. You can add these in the Admin Panel .","title":"Group Rules"}]}